// array.concat - використовується для об'єднання двох або більше масивів у новий масив (немутуючий)
// array.fill - використовується для заповнення всіх елементів масиву якимсь одним значенням (мутуючий)
// array.includes - використовується для перевірки наявності певного значення у масиві (немутуючий)
// array.indexOf - використовується для отримання першого входження певного значення у масиві (немутуючий)
// array.join - використовується для створення рядка, об'єднуючи всі елементи масиву (немутуючий)
// array.push - використовується для додавання одного або кількох елементів у кінець (мутуючий)
// array.pop - використовується для видалення останнього елементу (мутуючий)
// array.shift - використовується для видалення першого елементу з початку масиву (мутуючий)
// array.unshift - використовується для додавання одного або декількох елементів на початок масиву (мутуючий)
// array.reverse - використовується для зміни порядку елементів у масиві на протилежний (мутуючий)
// array.slice - використовується для створення нового масиву, який складається тільки з якоїсь певної частини вихідного масиву (немутуючий)

// array.splice - використовується для зміни вмісту масиву шляхом видалення, заміни або додавання нових елементів (мутуючий)
// array.splice(start, deleteCount, ...items)

// start - початковий індекс, з якого ми починаємо змінювати масив

// deleteCount - скільки елементів потрібно видалити з масиву
// якщо не вказати deleteCount - будуть видалені всі елементи від start до кінця масиву

// ...items - нові елементи, які будуть вставлені на місце ВИДАЛЕНИХ елементів

// За допомогою splice можна:
// 1. Видалити потрібну кількість елементів (deleteCount), починаючи з певного індексу масиву (start)
// 2. Вставити потрібну кількість елментів у масив (..items), у потрібну позицію масиву (start), при цьому видалення елементів з масиву може і не відбуватись
// 3. Вставити і видаляти (deleteCount) елементи одночасно починаючи з певної позиції масиву (start)

const arr = [1, 2, 3, 4, 5];

// Задача: починаючи з другого індексу, видалити один елемент
arr.splice(2, 2); // [1, 2, 5]

// splice(M, L) 
// M - з якого індекса починати
// L - скільки елементів видалити

// Задача: додати після двійки рядок 'Hello', при цьому нічого не видаляючи
arr.splice(2, 0, 'hello', 'John', 'Doe'); // [1, 2, 'hello', 'John', 'Doe', 5]

// Задача: починаючи з 2 індексу видалити 3 елементи і вставити числа 3, 4 // [1, 2, 3, 4, 5]
arr.splice(2, 3, 3, 4); // [1, 2, 3, 4, 5]

const arr2 = [1, 2, 3];
arr2.splice(5, 3, 'hello');